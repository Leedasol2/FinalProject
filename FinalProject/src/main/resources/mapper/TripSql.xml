<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTDMapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="data.mapper.TripMapperInter">
	<select id="getData" parameterType="String" resultType="tdto">
	select * from trip where tnum=#{tnum}
	</select>
	<!-- <select id="getTotalCount" resultType="int" parameterType="String">
	select count(*) from trip where part='festival' and endday>=CURDATE()
	</select> -->
	<select id="getTotalCount" resultType="int" parameterType="String">
	select count(*) from trip where part='festival' and endday>=#{day} and beginday <![CDATA[ <= ]]> #{day}
	</select>
	<update id="updateReadCount" parameterType="String">
	update trip set readcount=readcount+1 where tnum=#{tnum}
	</update>
	<select id="getList" resultType="tdto">
	select * from trip order by readcount desc
	</select>
	<select id="getRegionList" resultType="tdto">
	select * from trip where region=#{region} order by readcount desc
	</select>
	<select id="getThemeList" resultType="tdto">
	select * from trip where theme=#{theme} order by readcount desc
	</select>
		
	<!-- by 은비 -->
	<select id="getTitle" parameterType="String" resultType="String">
		select title from trip where tnum=#{tnum}
	</select> <!-- 은비 -->
	
	<!-- 동현 -->
	<select id="getAllTrips" resultType="tdto">
	  select * from trip order by tnum desc
	</select>
	<select id="getAllActivitys" resultType="tdto">
      select * from trip where part=${part} order by tnum desc
    </select> 
    <select id="getSearch" resultType="tdto" parameterType="String">
	  select * from trip where title like CONCAT('%',#{searchtext},'%')
	</select>
	
	<!-- 용기 -->
    <select id="getRegionThemeList" resultType="tdto" parameterType="tdto">
       select * from trip where part=#{part} and region=#{region} order by readcount desc
    </select>
    
    <!-- region 정렬 -->
   <select id="getRegionSortList" parameterType="String" resultType="tdto" >
   SELECT t.tnum,t.title,t.intro,t.location,count(r.tnum),ifnull(avg(r.rstar),0)
	FROM trip t
	    left outer JOIN review r
	   on r.tnum=t.tnum 
	where t.part=#{trip} and region=#{region}
	group by tnum
	order by t.readcount desc
   </select>
    <select id="getRegionhrstarList" parameterType="String" resultType="tdto" >
   SELECT t.tnum,t.title,t.intro,t.location,count(r.tnum),ifnull(avg(r.rstar),0)
	FROM trip t
	    left outer JOIN review r
	   on r.tnum=t.tnum 
	where t.part=#{trip} and region=#{region}
	group by tnum
	order by avg(rstar) desc
   </select>
    <select id="getRegionlrstarList" parameterType="String" resultType="tdto" >
   SELECT t.tnum,t.title,t.intro,t.location,count(r.tnum),ifnull(avg(r.rstar),0)
	FROM trip t
	    left outer JOIN review r
	   on r.tnum=t.tnum 
	where t.part=#{trip} and region=#{region}
	group by tnum
	order by avg(rstar) asc
   </select>
    <select id="getRegionCountList" parameterType="String" resultType="tdto" >
   SELECT t.tnum,t.title,t.intro,t.location,count(r.tnum),ifnull(avg(r.rstar),0)
	FROM trip t
	    left outer JOIN review r
	   on r.tnum=t.tnum 
	where t.part=#{trip} and region=#{region}
	group by tnum
	order by count(tnum) desc
   </select>
   
   <!-- theme 정렬 -->
     <select id="getThemeSortList" parameterType="String" resultType="tdto" >
   SELECT t.tnum,t.title,t.intro,t.location,count(r.tnum),ifnull(avg(r.rstar),0)
	FROM trip t
	    left outer JOIN review r
	   on r.tnum=t.tnum 
	where t.part=#{trip} and theme=#{theme}
	group by tnum
	order by t.readcount desc
   </select>
   <select id="getThemehrstarList" parameterType="String" resultType="tdto" >
   SELECT t.tnum,t.title,t.intro,t.location,count(r.tnum),ifnull(avg(r.rstar),0)
	FROM trip t
	    left outer JOIN review r
	   on r.tnum=t.tnum 
	where t.part=#{trip} and theme=#{theme}
	group by tnum
	order by avg(rstar) desc
   </select>
   <select id="getThemelrstarList" parameterType="String" resultType="tdto" >
   SELECT t.tnum,t.title,t.intro,t.location,count(r.tnum),ifnull(avg(r.rstar),0)
	FROM trip t
	    left outer JOIN review r
	   on r.tnum=t.tnum 
	where t.part=#{trip} and theme=#{theme}
	group by tnum
	order by avg(rstar) asc
   </select>
   <select id="getThemeCountList" parameterType="String" resultType="tdto" >
   SELECT t.tnum,t.title,t.intro,t.location,count(r.tnum),ifnull(avg(r.rstar),0)
	FROM trip t
	    left outer JOIN review r
	   on r.tnum=t.tnum 
	where t.part=#{trip} and theme=#{theme}
	group by tnum
	order by count(tnum) desc
   </select>
    
</mapper>
